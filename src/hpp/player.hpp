#pragma once

// All player-specific structs, typedefs, enums, and defines from mud.hpp

struct pc_data {
   CLAN_DATA *clan;
   AREA_DATA *area;
   ROOM_INDEX_DATA *roomarena;
   char *homepage;
   char *screenname;
   char *image;
   char *clan_name;
   char *pwd;
   char *email;
   char *bamfin;
   char *bamfout;
   int lost_attacks;
   char *rank;
   int shipnum;
   char *shipname;
   char *title;
   char *disguise;
   char *bestowments;
   int act2;
   int flags;
   int pkills;
   int pdeaths;
   int mkills;
   int mdeaths;
   int illegal_pk;
   char *fiance;
   char *propose;
   char *proposed;
   char *spouse;
   int forcerank;
   char *last_name;
   long int outcast_time;
   long int restore_time;
   int r_range_lo;
   int r_range_hi;
   int m_range_lo;
   int m_range_hi;
   int o_range_lo;
   int o_range_hi;
   char *tell_snoop;
   short wizinvis;
   short min_snoop;
   short condition[MAX_CONDS];
   short learned[MAX_SKILL];
   KILLED_DATA killed[MAX_KILLTRACK];
   short quest_number;
   short quest_curr;
   int quest_accum;
   int auth_state;
   time_t release_date;
   char *helled_by;
   char *bio;
   char *authed_by;
   SKILLTYPE *special_skills[5];
   char *prompt;
   char *subprompt;
   short pagerlen;
   bool openedtourney;
   short addiction[10];
   short drug_level[10];
   char *store_title;
   bool is_hacking;
   int wanted_flags;
   long bank;
   int salary;
   bool hotboot;
};

struct char_data {
   CHAR_DATA *next;
   CHAR_DATA *prev;
   CHAR_DATA *next_in_room;
   CHAR_DATA *prev_in_room;
   CHAR_DATA *master;
   CHAR_DATA *leader;
   FIGHT_DATA *fighting;
   CHAR_DATA *reply;
   char *owner;
   ROOM_INDEX_DATA *home;
   CHAR_DATA *switched;
   BUG_DATA *first_bug;
   BUG_DATA *last_bug;
   CONTRACT_DATA *first_contract;
   CONTRACT_DATA *last_contract;
   FELLOW_DATA *first_fellow;
   FELLOW_DATA *last_fellow;
   CHAR_DATA *mount;
   HHF_DATA *hunting;
   HHF_DATA *fearing;
   HHF_DATA *hating;
   SPEC_FUN *spec_fun;
   SPEC_FUN *spec_2;
   char *spec_funname;
   char *spec_funname2;
   MPROG_ACT_LIST *mpact;
   int mpactnum;
   unsigned short mpscriptpos;
   MOB_INDEX_DATA *pIndexData;
   DESCRIPTOR_DATA *desc;
   AFFECT_DATA *first_affect;
   AFFECT_DATA *last_affect;
   NOTE_DATA *pnote;
   NOTE_DATA *comments;
   OBJ_DATA *first_carrying;
   OBJ_DATA *last_carrying;
   ROOM_INDEX_DATA *in_room;
   ROOM_INDEX_DATA *was_in_room;
   ROOM_INDEX_DATA *was_sentinel;
   ROOM_INDEX_DATA *plr_home;
   PC_DATA *pcdata;
   DO_FUN *last_cmd;
   DO_FUN *prev_cmd;
   CHAR_DATA *challenged;
   CHAR_DATA *betted_on;
   int bet_amt;
   void *dest_buf;
   void *dest_buf_2;
   void *spare_ptr;
   int tempnum;
   EDITOR_DATA *editor;
   TIMER *first_timer;
   TIMER *last_timer;
   char *name;
   char *short_descr;
   char *long_descr;
   char *description;
   short num_fighting;
   short substate;
   short sex;
   short race;
   short top_level;
   short skill_level[MAX_ABILITY];
   short bonus[MAX_ABILITY];
   short trust;
   int played;
   time_t logon;
   time_t save_time;
   short timer;
   short wait;
   short hit;
   short max_hit;
   int force_skill[MAX_FORCE_SKILL];
   short force_control;
   short force_sense;
   short force_alter;
   short force_chance;
   short force_identified;
   short force_level_status;
   short force_align;
   short force_converted;
   short force_type;
   char *force_master;
   char *force_temp_master;
   char *force_disguise;
   int force_disguise_count;
   int wait_state;
   short mana;
   short max_mana;
   short move;
   short max_move;
   short numattacks;
   int gold;
   long experience[MAX_ABILITY];
   int act;
   int affected_by;
   int carry_weight;
   int carry_number;
   int xflags;
   int resistant;
   int immune;
   int susceptible;
   int attacks;
   int defenses;
   int speaks;
   int speaking;
   short saving_poison_death;
   short saving_wand;
   short saving_para_petri;
   short saving_breath;
   short saving_spell_staff;
   short alignment;
   short barenumdie;
   short baresizedie;
   short mobthac0;
   short hitroll;
   short damroll;
   short hitplus;
   short damplus;
   short position;
   short defposition;
   short height;
   short weight;
   short armor;
   short wimpy;
   int deaf;
   short perm_str;
   short perm_int;
   short perm_wis;
   short perm_dex;
   short perm_con;
   short perm_cha;
   short perm_lck;
   short perm_frc;
   short mod_str;
   short mod_int;
   short mod_wis;
   short mod_dex;
   short mod_con;
   short mod_cha;
   short mod_lck;
   short mod_frc;
   short mental_state;
   short emotional_state;
   int retran;
   int regoto;
   short mobinvis;
   int vip_flags;
   short backup_wait;
   int backup_mob;
   short was_stunned;
   char *mob_clan;
   GUARD_DATA *guard_data;
   short main_ability;
   short secondary_ability;
   short rppoints;
   char *comfreq;
   char *rank;
   int pheight, build;
   CHAR_DATA *aiming_at;
   short colors[MAX_COLORS];
   int home_vnum;
   int resetvnum;
   int resetnum;
};


// Any other player-related enums, defines, and typedefs from mud.hpp should be added here.
